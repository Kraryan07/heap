class Solution {
  public:
    vector<int> maxCombinations(int N, int K, vector<int> &A, vector<int> &B) {
        // code here
       priority_queue<int,vector<int>,greater<int>>pq;
       for(int i=0;i<N;i++){
           for(int j=0;j<N;j++){
               int sum=A[i]+B[j];
               if(pq.size()<K){
                   pq.push(sum);
               }
               else{
                   if(sum>pq.top()){
                       pq.pop();
                       pq.push(sum);
                   }
               }
           }
       }
       vector<int>ans;
       while(!pq.empty()){
           ans.push_back(pq.top());
           pq.pop();
       }
       reverse(ans.begin(),ans.end());
       return ans;
    }
};
