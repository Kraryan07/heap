class Solution {
  public:
    int signum(int a,int b){
        if(a==b){
            return 0;
        }
        else if(a>b){
            return 1;
        }
        else{
            return -1;
        }
    }
    void findmedian(int element, priority_queue<double>&maxheap, priority_queue<double,vector<double>,greater<double>>&minheap,double &median){
        switch(signum(maxheap.size(),minheap.size())){
            case 0:{
                if(element>median){
                    minheap.push(element);
                    median=minheap.top();
                }
                else{
                    maxheap.push(element);
                    median=maxheap.top();
                }
                break;
            }
            case 1:{
                if(element>median){
                    minheap.push(element);
                    median=(maxheap.top()+minheap.top())/2.0;
                }
                else{
                    minheap.push(maxheap.top());
                    maxheap.pop();
                    maxheap.push(element);
                    median=(maxheap.top()+minheap.top())/2.0;
                }
                break;
            }
            case -1:{
                if(element>median){
                    maxheap.push(minheap.top());
                    minheap.pop();
                    minheap.push(element);
                    median=(maxheap.top()+minheap.top())/2.0;
                }
                else{
                    maxheap.push(element);
                    median=(maxheap.top()+minheap.top())/2.0;
                }
                break;
            }
        }
        // return median;
    }
    vector<double> getMedian(vector<int> &arr) {
        // code here
        vector<double>ans;
        priority_queue<double,vector<double>,greater<double>>minheap;
        priority_queue<double>maxheap;
        double median=0.0;
        for(int i=0;i<arr.size();i++){
            findmedian(arr[i],maxheap,minheap,median);
            ans.push_back(median);
        }
        return ans;
    }
};
